{"version":3,"sources":["webpack:///./src/components/Balance.js","webpack:///./src/pages/index.js"],"names":["Balance","props","_this","_React$Component","call","this","auth","window","success","userId","secret","JSON","parse","localStorage","getItem","state","isAuthenticated","accounts","progressBar","class","css","waitingForUpdate","fetcAccounts","fetchAccounts","bind","assertThisInitialized_default","componentDidMount","console","log","navigate","render","_this$state","react_default","a","createElement","Fragment","className","updateProgressIndicator","list","map","item","key","accountId","itemWrapper","name","available","toFixed","balanceDiv","balance","getAccessToken","_callee","token","then","now","res","json","regenerator_default","wrap","_context","prev","next","Date","date","getTime","expires_in","abrupt","Promise","resolve","access_token","fetch","urls","method","headers","Content-Type","body","stringify","grant_type","client_id","client_secret","sent","ok","Error","status","statusText","hasOwnProperty","warn","setItem","stop","_callee2","_context2","Authorization","setState","setTimeout","gotUpdate","React","Component","IndexPage","Layout","headerTitle","SEO","title","keywords","components_Balance"],"mappings":"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","file":"component---src-pages-index-js-078e00f332fc1c346e6a.js","sourcesContent":["import React from 'react'\nimport { navigate } from 'gatsby'\nimport { urls } from '../utils/settings'\nimport css from './Balance.module.scss'\n\nclass Balance extends React.Component {\n  constructor(props) {\n    super(props)\n    let auth =\n      typeof window === 'undefined'\n        ? { success: false, userId: '', secret: '' }\n        : JSON.parse(localStorage.getItem('sd60:authenticate'))\n\n    if (auth === null) {\n      auth = { success: false, userId: '', secret: '' }\n    }\n\n    this.state = {\n      isAuthenticated: auth.success || false,\n      userId: auth.userId || '',\n      secret: auth.secret || '',\n      accounts: [],\n      progressBar: {\n        class: css.waitingForUpdate,\n      },\n    }\n    this.fetcAccounts = this.fetchAccounts.bind(this)\n  }\n\n  componentDidMount() {\n    console.log('component did mount. state:', this.state)\n    if (this.state.isAuthenticated === false) {\n      navigate('/authenticate')\n    }\n\n    if (this.state.isAuthenticated) {\n      console.log('FEtching accounts')\n      this.fetchAccounts()\n    }\n  }\n\n  render() {\n    const { accounts, progressBar } = this.state\n    return (\n      <>\n        <div className={css.updateProgressIndicator}>\n          <div className={progressBar.class} />\n        </div>\n        <ul className={css.list}>\n          {accounts.map(item => (\n            <li className={css.item} key={item.accountId}>\n              <div className={css.itemWrapper}>\n                <h3 className={css.name}>{item.name}</h3>\n                <div className={css.available}>\n                  <span>kr </span>\n                  {item.available.toFixed(2)}\n                </div>\n                <div className={css.balanceDiv}>\n                  <span>kr </span>\n                  {item.balance.toFixed(2)}\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </>\n    )\n  }\n\n  /**\n   * helper to fetch the access token for the api backend\n   */\n  async getAccessToken() {\n    const token = JSON.parse(localStorage.getItem('sd60:token'))\n    const then = new Date(token.date)\n    const now = new Date()\n\n    if (then.getTime() + (token.expires_in - 300) * 1000 > now.getTime()) {\n      return Promise.resolve(token.access_token)\n    }\n\n    const res = await fetch(urls.token, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        grant_type: 'client_credentials',\n        client_id: this.state.userId,\n        client_secret: this.state.secret,\n      }),\n    })\n\n    if (!res.ok) {\n      throw new Error(`Invalid response: ${res.status} ${res.statusText}`)\n    }\n\n    const json = await res.json()\n    // lets be a bit paranoid\n    if (\n      !json.hasOwnProperty('access_token') ||\n      !json.hasOwnProperty('expires_in')\n    ) {\n      console.warn(json)\n      throw new Error('Something is not right with the access_token Response.')\n    }\n\n    json.date = new Date()\n    localStorage.setItem('sd60:token', JSON.stringify(json))\n\n    return json.access_token\n  }\n\n  /**\n   * Fetches the accounts from the server.\n   */\n  async fetchAccounts() {\n    const token = await this.getAccessToken()\n    const res = await fetch(urls.balance, {\n      method: 'get',\n      headers: { Authorization: `Bearer ${token}` },\n    })\n\n    console.log('result:', res.status, res.statusText)\n    const json = await res.json()\n    if (!res.ok) {\n      console.warn('error text:', json)\n      return\n    }\n\n    console.log('Getting ready for timeout')\n    this.setState({\n      accounts: json,\n      progressBar: { class: css.waitingForUpdate },\n    })\n\n    setTimeout(\n      function() {\n        console.log('Got timeout')\n        this.setState({\n          progressBar: { class: css.gotUpdate },\n        })\n        this.fetchAccounts()\n      }.bind(this),\n      30000\n    )\n  }\n}\n\nexport default Balance\n","import React from 'react'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\nimport Balance from '../components/Balance'\n\nconst IndexPage = () => (\n  <Layout headerTitle=\"Saldo - Again\">\n    <SEO title=\"Home\" keywords={[`gatsby`, `open banking`, `react`]} />\n    <Balance />\n  </Layout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}