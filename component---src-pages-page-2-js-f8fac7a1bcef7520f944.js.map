{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./src/utils/colors.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","module","exports","themes","cosmic","primary","light","main","dark","secondary","teal","text","m","require","default","SEO","_ref","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","theme","MyHeader","styled","header","withConfig","displayName","componentId","Title","h1","Header","headerTitle","react_default","siteTitle","Footer","footer","Version","span","Main","Layout","render","_this$props","this","props","children","Fragment","version","Date","getFullYear","id","href","React","Component","node","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","createContext","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-page-2-js-f8fac7a1bcef7520f944.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","const colors = {\n  themes: {\n    cosmic: {\n      primary: {\n        light: '#FFFBE5',\n        main: '#D8CBC7',\n        dark: '#D8CBC7',\n      },\n      secondary: {\n        main: '#6193BF',\n        dark: '#6193BF',\n        light: '#D4E6FC',\n      },\n    },\n    teal: {\n      primary: {\n        main: '#4bb5ab',\n        light: '#80e8dd',\n        dark: '#00857c',\n        text: '#000000',\n      },\n      secondary: {\n        main: '#efebe9',\n        light: '#ffffff',\n        dark: '#bdb9b7',\n        text: '#000000',\n      },\n    },\n  },\n}\n\nmodule.exports = colors\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","// import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { themes } from '../utils/colors'\n\nconst theme = themes.teal\n\nconst MyHeader = styled.header`\n  background-color: ${theme.primary.main};\n  color: black;\n  position: fixed;\n  top: 0px;\n  width: 100%;\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.3);\n`\nconst Title = styled.h1`\n  color: rgba(0, 0, 0, 0.66);\n  text-decoration: none;\n  font-size: 1.4em;\n  padding: 0.8em;\n`\n\nconst Header = ({ headerTitle }) => (\n  <MyHeader>\n    <div>\n      <Title>{headerTitle}</Title>\n    </div>\n  </MyHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Header from './header'\nimport { version } from '../../package'\nimport { themes } from '../utils/colors'\nimport './layout.css'\n\nconst theme = themes.teal\n\nconst Footer = styled.footer`\n  font-family: 'Roboto', sans-serif;\n  background-color: ${theme.primary.main};\n  padding: 0.5rem;\n  text-align: center;\n  color: #404040;\n  font-size: 0.9em;\n  position: fixed;\n  width: 100%;\n  bottom: 0px;\n  box-shadow: 0px -2px 10px rgba(0, 0, 0, 0.3);\n  div#built-with {\n    font-size: 0.8em;\n  }\n`\nconst Version = styled.span`\n  font-weight: 700;\n`\n\nconst Main = styled.main`\n  padding: 14vh 6vw;\n  background-color: ${theme.secondary.main};\n  height: 100%;\n`\n\nclass Layout extends React.Component {\n  render() {\n    const { headerTitle, children } = this.props\n    return (\n      <>\n        <Header headerTitle={headerTitle} />\n        <Main>{children}</Main>\n        <Footer>\n          <div>\n            Version <Version>{version}</Version> by Thomas Malt ©{' '}\n            {new Date().getFullYear()}\n          </div>\n          <div id=\"built-with\">\n            Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </div>\n        </Footer>\n      </>\n    )\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}