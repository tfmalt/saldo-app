{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/utils/colors.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","module","exports","themes","cosmic","primary","light","main","dark","secondary","teal","text","SEO","_ref","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","theme","MyHeader","styled","header","withConfig","displayName","componentId","Title","h1","Header","headerTitle","react_default","siteTitle","Footer","footer","Version","span","Main","Layout","render","_this$props","this","props","children","Fragment","version","Date","getFullYear","id","href","React","Component","node"],"mappings":"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","file":"component---src-pages-404-js-ada397d13001bb6d262e.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const colors = {\n  themes: {\n    cosmic: {\n      primary: {\n        light: '#FFFBE5',\n        main: '#D8CBC7',\n        dark: '#D8CBC7',\n      },\n      secondary: {\n        main: '#6193BF',\n        dark: '#6193BF',\n        light: '#D4E6FC',\n      },\n    },\n    teal: {\n      primary: {\n        main: '#4bb5ab',\n        light: '#80e8dd',\n        dark: '#00857c',\n        text: '#000000',\n      },\n      secondary: {\n        main: '#efebe9',\n        light: '#ffffff',\n        dark: '#bdb9b7',\n        text: '#000000',\n      },\n    },\n  },\n}\n\nmodule.exports = colors\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","// import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { themes } from '../utils/colors'\n\nconst theme = themes.teal\n\nconst MyHeader = styled.header`\n  background-color: ${theme.primary.main};\n  color: black;\n  position: fixed;\n  top: 0px;\n  width: 100%;\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.3);\n`\nconst Title = styled.h1`\n  color: rgba(0, 0, 0, 0.66);\n  text-decoration: none;\n  font-size: 1.4em;\n  padding: 0.8em;\n`\n\nconst Header = ({ headerTitle }) => (\n  <MyHeader>\n    <div>\n      <Title>{headerTitle}</Title>\n    </div>\n  </MyHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Header from './header'\nimport { version } from '../../package'\nimport { themes } from '../utils/colors'\nimport './layout.css'\n\nconst theme = themes.teal\n\nconst Footer = styled.footer`\n  font-family: 'Roboto', sans-serif;\n  background-color: ${theme.primary.main};\n  padding: 0.5rem;\n  text-align: center;\n  color: #404040;\n  font-size: 0.9em;\n  position: fixed;\n  width: 100%;\n  bottom: 0px;\n  box-shadow: 0px -2px 10px rgba(0, 0, 0, 0.3);\n  div#built-with {\n    font-size: 0.8em;\n  }\n`\nconst Version = styled.span`\n  font-weight: 700;\n`\n\nconst Main = styled.main`\n  padding: 14vh 6vw;\n  background-color: ${theme.secondary.main};\n  height: 100%;\n`\n\nclass Layout extends React.Component {\n  render() {\n    const { headerTitle, children } = this.props\n    return (\n      <>\n        <Header headerTitle={headerTitle} />\n        <Main>{children}</Main>\n        <Footer>\n          <div>\n            Version <Version>{version}</Version> by Thomas Malt Â©{' '}\n            {new Date().getFullYear()}\n          </div>\n          <div id=\"built-with\">\n            Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </div>\n        </Footer>\n      </>\n    )\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}